const countElement=document.getElementById("count"),incrementButton=document.querySelectorAll(".increment"),decrementButton=document.querySelectorAll(".decrement"),calendarView=document.getElementById("calendar-view"),listView=document.getElementById("list-view");function getCurrentDate(){return(new Date).toISOString().split("T")[0]}function loadSwings(){const t=getCurrentDate(),e=localStorage.getItem(t)||0;countElement.textContent=e}function saveSwings(t){const e=getCurrentDate();localStorage.setItem(e,t)}incrementButton.forEach((t=>{t.addEventListener("click",(t=>{let e=parseInt(countElement.textContent),n=t.target.dataset.count||1;e+=parseInt(n),countElement.textContent=e,saveSwings(e)}))})),decrementButton.forEach((t=>{t.addEventListener("click",(t=>{let e=parseInt(countElement.textContent),n=t.target.dataset.count||1;e=Math.max(0,e-parseInt(n)),countElement.textContent=e,saveSwings(e)}))})),loadSwings();let currentMonth=(new Date).getMonth(),currentYear=(new Date).getFullYear();function generateCalendar(t){const[e,n,r]=t.split("-").map(Number);currentMonth=n-1,currentYear=e;const a=new Date(currentYear,currentMonth).getDay(),o=32-new Date(currentYear,currentMonth,32).getDate();let c="<table><tr><th>Sun</th><th>Mon</th><th>Tue</th><th>Wed</th><th>Thu</th><th>Fri</th><th>Sat</th></tr><tr>",l=0,s=1;for(let t=0;t<6;t++){for(let e=0;e<7;e++)if(0===t&&e<a)c+="<td></td>";else{if(s>o)break;{const t=getCurrentDate(),e=`${currentYear}-${(currentMonth+1).toString().padStart(2,"0")}-${s.toString().padStart(2,"0")}`,n=e===t,r=localStorage.getItem(e)||0;c+=`<td class="${n?"current-date":""}" data-date="${e}"><span class="date-label">${s}</span> <span class="swings-count">${r}</span></td>`,s++,l+=parseInt(r)}}c+="</tr><tr>"}c+="</tr></table>";const i=`${["January","February","March","April","May","June","July","August","September","October","November","December"][currentMonth]} ${currentYear}`;calendarView.innerHTML=`<h3>${i}</h3>${c}`,totalswings.textContent=l}function generateListView(t){const e=Object.entries(localStorage).sort(((t,e)=>e[0].localeCompare(t[0])));let n="<ul data-stack>";e.forEach((([t,e])=>{n+=`<li data-cluster="between"><span>${t}:</span> <span>${e} swings</span></li>`})),n+="</ul>",listView.innerHTML=n}const toggleViewButton=document.getElementById("toggle-view");toggleViewButton.addEventListener("click",(()=>{"none"===calendarView.style.display?(calendarView.style.display="block",listView.style.display="none",toggleViewButton.textContent="Switch to List View"):(calendarView.style.display="none",listView.style.display="block",toggleViewButton.textContent="Switch to Calendar View")}));const currentDate=getCurrentDate();generateCalendar(currentDate),generateListView(currentDate);const prevMonthButton=document.getElementById("prev-month"),nextMonthButton=document.getElementById("next-month");function generateGraph(){const t=Object.entries(localStorage).sort(((t,e)=>t[0].localeCompare(e[0]))),e=t.map((([t,e])=>t)),n=t.map((([t,e])=>e)),r=document.getElementById("swingChart").getContext("2d");new Chart(r,{type:"line",data:{labels:e,datasets:[{label:"Kettlebell Swings",data:n,fill:!1,borderColor:"rgb(75, 192, 192)",tension:.1}]},options:{scales:{y:{beginAtZero:!0}}}})}function syncUp(){const t=JSON.stringify(localStorage);try{fetch("https://iowaztlan.com/dbsync/dbsync.php",{method:"POST",body:t}).then((t=>t.json())).then((t=>{alert(`Your sync code is: ${t.code}`)}))}catch(t){alert("Error syncing up: "+t)}}function syncDown(){const t=prompt("Enter your sync code:");try{fetch(`https://iowaztlan.com/dbsync/dbsync.php?code=${t}`).then((t=>t.json())).then((t=>{t.error?alert(t.error+". Please check your code and try again."):(Object.keys(t).forEach((e=>{localStorage.setItem(e,t[e])})),alert("Sync completed successfully!"),window.location.reload())}))}catch(t){alert("Invalid sync code. Please try again.")}}prevMonthButton.addEventListener("click",(()=>{currentMonth--,currentMonth<0&&(currentMonth=11,currentYear--);generateCalendar(new Date(currentYear,currentMonth,1).toISOString().split("T")[0])})),nextMonthButton.addEventListener("click",(()=>{currentMonth++,currentMonth>11&&(currentMonth=0,currentYear++);generateCalendar(new Date(currentYear,currentMonth,1).toISOString().split("T")[0])})),generateCalendar(getCurrentDate()),generateGraph(),syncbutton.addEventListener("click",syncUp),syncdownbutton.addEventListener("click",syncDown);
